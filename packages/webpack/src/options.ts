import { IconOptions } from "icons"

export interface PluginOptions {
    /** our source logo - can be png or svg (required) */
    logo: string

    /**
     * Enable caching and optionally specify the path to store cached data
     * Note: disabling caching may increase build times considerably
     */
    cache?: boolean

    /**
     * Use nearest neighbor resampling to preserve hard edges on pixel art @default false
     * */
    pixelArt?: boolean

    /**
     * Browsers don't send cookies when fetching a manifest, enable this to fix that.
     */
    loadManifestWithCredentials?: boolean

    /**
     *
     * Inject html links/metadata (requires html-webpack-plugin).
     * This option accepts arguments of different types:
     * - boolean
     *   `false`: disables injection
     *   `true`: enables injection if that is not disabled in html-webpack-plugin
     * - function
     *   any predicate that takes an instance of html-webpack-plugin and returns either
     *   `true` or `false` to control the injection of html metadata for the html files
     *   generated by this instance.
     */
    inject?: boolean | ((htmlWebpackPlugin: any) => boolean)

    /**
     * Favicons configuration option
     * @see https://github.com/itgalaxy/favicons
     */
    favicons?: Partial<{
        /* Create Android homescreen icon. */
        android: boolean | IconOptions
        /* Create Apple touch icons. */
        appleIcon: boolean | IconOptions
        /* Create Apple startup assets. */
        appleStartup: boolean | IconOptions
        /* Create Opera Coast icon. */
        coast: boolean | IconOptions
        /* Create regular icons. */
        favicons: boolean | IconOptions
        /* Create Firefox OS icons. */
        firefox: boolean | IconOptions
        /* Create Windows 8 tile icons. */
        windows: boolean | IconOptions
        /* Create Yandex browser icon. */
        yandex: boolean | IconOptions
    }>

    manifest?: {
        /**
         * Your application's name @default null
         */
        appName?: string | null

        /**
         * Your application's short_name.
         * @default appName
         */
        appShortName?: string | null

        /**
         * Your application's description @default null
         */
        appDescription?: string | null

        /**
         * Your (or your developer's) name @default null
         */
        developerName?: string | null

        /**
         * Your (or your developer's) URL @default null
         */
        developerURL?: string | null

        /**
         * Your application's version string @default '1.0'
         */
        version?: string

        /**
         * Primary text direction for name, short_name, and description @default 'auto'
         */
        dir?: string

        /** Primary language for name and short_name @default 'en-US' */
        lang?: string

        /** Background colour for flattened icons @default '#fff' */
        background?: string

        /** Theme color user for example in Android's task switcher @default '#fff' */
        theme_color?: string

        /** Style for Apple status bar @default 'black-translucent' */
        appleStatusBarStyle?: "black-translucent" | "default" | "black"

        /** Preferred display mode: 'fullscreen', 'standalone', 'minimal-ui' or 'browser' @default 'standalone' */
        display?: "fullscreen" | "standalone" | "minimal-ui" | "browser"

        /** Default orientation: 'any', 'natural', 'portrait' or 'landscape' @default 'any' */
        orientation?:
            | "any"
            | "natural"
            | "landscape"
            | "landscape-primary"
            | "landscape-secondary"
            | "portrait"
            | "portrait-primary"
            | "portrait-secondary"

        /** Should the browser prompt the user to install the native companion app. */
        prefer_related_applications?: boolean

        /** Information about the native companion apps. This will only be used if `preferRelatedApplications` is `true`. */
        related_applications?: {
            platform: string
            url: string
            id: string
        }[]

        /** set of URLs that the browser considers within your app */
        scope?: string
    }

    /**
     * Favicon generation modes
     * - `light`
     *     the light mode is using the original logo as favicon
     *     this mode has a very fast compilation but limited features
     *     by default this mode is used for development
     * - `webapp`
     *     the webapp mode is converting the original logo into different icons
     *     this mode has a quite slow compilation but wide browser support
     *     by default this mode is used for production
     */
    mode?: "light" | "webapp"

    /**
     * Favicon generation modes used during development
     * - `light`
     *     the light mode is using the original logo as favicon
     *     this mode has a very fast compilation but limited features
     *     by default this mode is used for development
     * - `webapp`
     *     the webapp mode is converting the original logo into different icons
     *     this mode has a quite slow compilation but wide browser support
     *     by default this mode is used for production
     */
    devMode?: "light" | "webapp"

    /**
     * Prefix path for generated assets
     */
    prefix?: string

    /**
     * The directory to output the assets relative to the webpack output dir.
     * Relative string paths are allowed here ie '../public/static'. If this
     * option is not set, `prefix` is used.
     */
    outputPath?: string

    /** Override the publicPath option usually read from webpack configuration */
    publicPath?: string
}

export type InternalPluginOptions = Required<
    Omit<
        PluginOptions,
        // Optional properties after applying defaults:
        "mode" | "devMode" | "publicPath" | "outputPath"
    >
> &
    PluginOptions
